require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "Api::V1::Badges", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Badge. As you add validations to Badge, be sure to
  # adjust the attributes here as well.
  let(:user) { create(:user) }


  
  describe "GET #index" do
    it "returns http success" do
      get "/api/v1/badges"
      expect(response).to have_http_status(:success)
    end
  end

  describe "GET /show" do
    it "returns http success" do
      badge = Badge.create(name: "Test Badge", description: "This is a test badge")
      get "/api/v1/badges/#{badge.id}"
      expect(response).to have_http_status(:success)
    end
  end

  describe "POST /create" do
    it "returns http success" do
      post "/api/v1/badges", params: { badge: { name: "Test Badge", description: "This is a test badge" } }
      expect(response).to have_http_status(:redirect)
    end
  end

  describe "PATCH /update" do
    it "returns http success" do
      badge = Badge.create(name: "Test Badge", description: "This is a test badge")
      patch "/api/v1/badges/#{badge.id}", params: { badge: { name: "New Test Badge Name" } }
      follow_redirect!
      expect(response).to have_http_status(:success)
    end
  end

  describe "DELETE /destroy" do
    it "returns http success" do
      badge = Badge.create(name: "Test Badge", description: "This is a test badge")
      delete "/api/v1/badges/#{badge.id}"
      expect(response).to have_http_status(:redirect)
    end
  end
end
